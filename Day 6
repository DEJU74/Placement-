class Node:
    def __init__(self, d): self.data, self.next = d, None

class LinkedList:
    def __init__(self): self.head = None

    def append(self, d):
        n = Node(d)
        if not self.head: self.head = n; return
        t = self.head
        while t.next: t = t.next
        t.next = n

    def prepend(self, d):
        n = Node(d)
        n.next = self.head
        self.head = n

    def delete(self, k):
        t = self.head
        if t and t.data == k: self.head = t.next; return
        p = None
        while t and t.data != k: p, t = t, t.next
        if not t: print("Not found"); return
        p.next = t.next

    def display(self):
        t = self.head
        while t: print(t.data, end=" -> "); t = t.next
        print("None")

# Example
ll = LinkedList()
for val in [5, 10, 20, 30]: ll.append(val)
ll.prepend(1)
ll.display()  # 1 -> 5 -> 10 -> 20 -> 30 -> None
ll.delete(10)
ll.display()  # 1 -> 5 -> 20 -> 30 -> None
